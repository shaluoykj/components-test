/*! http://www.csii.com.cn/hercules/vx  
 * Copyright (c) 2012-2017 CSII 
 * @license vx - v2.0 
 * 2017-04-10 
 */
! function(a) {
	var b, c, d, e, f, g, h = {
		color: {
			log: "gray",
			info: "blue",
			debug: "blue",
			warn: "yellow",
			error: "red",
			uncaught: "red"
		}
	};
	c = "display:block;position: fixed;top: 0px;right: 0px;z-index: 9999;margin: 0px;width: 50px;height: 50px;line-height: 50px;text-align: center;border: 0px;", b = "display:block;position: fixed;top: 0px;left: 0px;z-index: 9999;margin: 0px;width: 100%;height: 100%;border: 0px;", e = "display:none;position:fixed;top:0px;right:0px;background:#fff;width:100%;z-index:9998;min-height:500px;", d = "display:block;position:fixed;top:0px;bottom:0px;left:0px;background:#fff;width:100%;z-index:9998;min-height:500px;overflow-y: auto;", f = "position: fixed; top: 0px; right: 0px; z-index: 9999; background-color: dodgerblue; margin: 0px; width: 40px; height: 40px; border: 1px solid dodgerblue; border-radius: 50%; line-height: 40px; text-align: center; font-size: 0.5em; color: white;", g = "position: fixed; top: 0px; right: 0px; z-index: 9999; background-color: darkgrey; margin: 0px; width: 40px; height: 40px; border: 1px solid darkgrey; border-radius: 50%; line-height: 40px; text-align: center; font-size: 0.5em; color: white;",
		function() {
			var i, j, k, l, m;
			return i = document.createElement("iframe"), i.style.cssText = c, document.documentElement.appendChild(i), j = i.contentDocument || i.contentWindow.document, m = {
				_queue: [],
				_window: i.contentWindow,
				_echo: function() {
					if(this._queue.length > 0) {
						var a = this._queue.pop();
						this._print(a.type, a.message), this._echo()
					}
				},
				_print: function(a, b) {
					var c = j.createElement("li");
					c.style.borderBottom = "1px solid gray", c.style.lineHeight = "20px", c.style.fontSize = "14px", c.style.color = h.color[a || "log"], b = (b + "").replace(/\\n/g, "<br/>&nbsp;&nbsp;&nbsp;&nbsp;"), c.innerHTML = a + ">>" + b, this._outputUl.appendChild(c)
				},
				onready: function() {
					k = j.getElementById("consoleDiv"), k.style.cssText = e, l = j.getElementById("ball"), l.style.cssText = f, l.addEventListener("click", function() {
						m.toggle()
					}), this._ready = !0, this._outputUl = j.getElementById("outputUl"), this._echo()
				},
				proxyLog: function(b) {
					a.addEventListener && a.addEventListener("error", function(a) {
						var b = a.message + " " + a.filename + " " + a.lineno + " \nstack :\n" + a.error.stack;
						m.handle("uncaught", b)
					}, !1);
					var c = b.log,
						d = b.info,
						e = b.debug,
						f = b.warn,
						g = b.error;
					b.trace;
					b.log = function(a) {
						c.apply(this, arguments), m.handle("log", a)
					}, b.info = function(a) {
						d && d.apply(this, arguments), m.handle("info", a)
					}, b.debug = function(a) {
						e && e.apply(this, arguments), m.handle("info", a)
					}, b.warn = function(a) {
						f && f.apply(this, arguments), m.handle("warn", a)
					}, b.error = function(a) {
						g && g.apply(this, arguments), m.handle("error", a)
					}
				},
				handle: function(a, b) {
					b && this._queue.unshift({
						type: a,
						message: b
					}), this._ready && this._echo()
				},
				toggle: function() {
					this.$showConsole ? (i.style.cssText = c, k.style.cssText = e, l.style.cssText = f, this.$showConsole = !1) : (i.style.cssText = b, k.style.cssText = d, l.style.cssText = g, this.$showConsole = !0)
				},
				clear: function() {
					this._outputUl.innerHTML = ""
				}
			}, i.onload = function() {
				m.onready()
			}, j.open(), j.write('<!DOCTYPE html><html id="vxconsole"><head><title>vxconsole</title><meta id="meta" name="viewport" content="width=device-width, height=device-height,user-scalable=no,initial-scale=1.0" /><body>   <div id="consoleDiv"><ul id="outputUl" style="padding:0px;margin:0px;width:100%;height:100%"></ul></div>   <div id="ball">控制台</div></body></html>'), j.close(), m
		}().proxyLog(a.console)
}(window);